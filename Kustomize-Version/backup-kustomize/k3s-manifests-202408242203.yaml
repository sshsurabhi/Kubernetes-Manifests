apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T12:15:26Z"
    generateName: app-fastapi-85f6bc55bd-
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd-6dmhn
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: app-fastapi-85f6bc55bd
      uid: 42563440-1253-4b9a-9642-360eda1f2c22
    resourceVersion: "38005"
    uid: 5e3813fe-b811-41cb-84b0-855b875a0c1a
  spec:
    containers:
    - image: surabhiharsha5/datascientestapi:v.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: fastapi
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rbghk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: app-fastapi
    serviceAccountName: app-fastapi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rbghk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:15:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:15:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d04acd6cbfc2a0f72a22b8fa784e43da23b65017c5957ec2c1794af887732141
      image: docker.io/surabhiharsha5/datascientestapi:v.13.0
      imageID: docker.io/surabhiharsha5/datascientestapi@sha256:bde3d04ce95347412183d9c8b349d6f2d4d0c72bdc66697bb6c2000ff5acc9dc
      lastState:
        terminated:
          containerID: containerd://3d3a0502aea3acec6e2c773421dbfefdf379b57052f4cf7089b68c1f4f44fdd6
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:11Z"
      name: fastapi
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:48Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.133
    podIPs:
    - ip: 10.42.2.133
    qosClass: BestEffort
    startTime: "2024-08-20T12:15:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T08:33:24Z"
    generateName: coredns-576bfc4dc7-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 576bfc4dc7
    name: coredns-576bfc4dc7-qlrl6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-576bfc4dc7
      uid: 66df247e-0058-4862-8780-1232a13dd6db
    resourceVersion: "38014"
    uid: 069cf51d-1966-448d-95fb-2427d9c97eed
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/mirrored-coredns-coredns:1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h6bsf
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - name: kube-api-access-h6bsf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e3e615afd4bd9228e45277adf5c0da0f8d581a03f7e20bac612b2fd127ff65a0
      image: docker.io/rancher/mirrored-coredns-coredns:1.10.1
      imageID: docker.io/rancher/mirrored-coredns-coredns@sha256:a11fafae1f8037cbbd66c5afa40ba2423936b72b4fd50a7034a7e8b955163594
      lastState:
        terminated:
          containerID: containerd://0bb6fc0b0a5bdeb2b3cf7bc666f6c704ea1df2dce8d881342c7080616e9bc1a4
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:14Z"
      name: coredns
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:41:04Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.145
    podIPs:
    - ip: 10.42.2.145
    qosClass: Burstable
    startTime: "2024-08-20T08:33:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-24T07:52:39Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-08-20T07:55:41Z"
    generateName: coredns-7c444649cb-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7c444649cb
    name: coredns-7c444649cb-8jfqn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7c444649cb
      uid: 45404772-bb73-4ab2-ba5d-181bf09a940b
    resourceVersion: "15390"
    uid: a8f80f27-3079-46ce-a115-05d92237cb9f
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/mirrored-coredns-coredns:1.9.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tgtgt
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-172-31-26-79
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - name: kube-api-access-tgtgt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T07:50:06Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-26T14:12:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:36Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://5c9c0a8de85e4898ff593430bec903c4b5818e4bbc765081b0085ddec4c7f8d5
      image: docker.io/rancher/mirrored-coredns-coredns:1.9.4
      imageID: docker.io/rancher/mirrored-coredns-coredns@sha256:823626055cba80e2ad6ff26e18df206c7f26964c7cd81a8ef57b4dc16c0eec61
      lastState:
        terminated:
          containerID: containerd://75c5a00a4748cf207be98242e8578bef8a78702672d91e5b94d2b41198b0a448
          exitCode: 255
          finishedAt: "2023-04-26T14:11:24Z"
          reason: Unknown
          startedAt: "2023-04-24T07:52:41Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:11:43Z"
    hostIP: 172.31.26.79
    phase: Running
    podIP: 10.42.1.11
    podIPs:
    - ip: 10.42.1.11
    qosClass: Burstable
    startTime: "2023-04-24T07:52:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-12T11:07:44Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2023-04-24T07:53:09Z"
    generateName: coredns-7c444649cb-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7c444649cb
    name: coredns-7c444649cb-mdbnk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7c444649cb
      uid: 45404772-bb73-4ab2-ba5d-181bf09a940b
    resourceVersion: "15382"
    uid: 0bbe1410-6bf4-45aa-8d36-a69134133d9d
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/mirrored-coredns-coredns:1.9.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jzl8n
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-172-31-31-91
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - name: kube-api-access-jzl8n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:47:34Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:26Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://82a7844df44b0de1ffc08879249a54072fd5199ec79811c82198975926dad77c
      image: docker.io/rancher/mirrored-coredns-coredns:1.9.4
      imageID: docker.io/rancher/mirrored-coredns-coredns@sha256:823626055cba80e2ad6ff26e18df206c7f26964c7cd81a8ef57b4dc16c0eec61
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:07:54Z"
    hostIP: 172.31.31.91
    phase: Running
    podIP: 10.42.0.3
    podIPs:
    - ip: 10.42.0.3
    qosClass: Burstable
    startTime: "2023-04-12T11:07:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=84707319CDBA292F2F3CE30082ED04B61AF82B4E4E169A849D4ABC7356CAD361
    creationTimestamp: "2024-08-20T08:33:23Z"
    generateName: helm-install-traefik-
    labels:
      batch.kubernetes.io/controller-uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
      batch.kubernetes.io/job-name: helm-install-traefik
      controller-uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
      helmcharts.helm.cattle.io/chart: traefik
      job-name: helm-install-traefik
    name: helm-install-traefik-4tsrs
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-traefik
      uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
    resourceVersion: "17938"
    uid: 429993d6-a06b-426c-80be-b4e25054c4be
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: traefik
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
        value: https://%{KUBERNETES_API}%/static/charts/traefik-25.0.3+up25.0.0.tgz
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: AUTH_PASS_CREDENTIALS
        value: "false"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
      - name: FAILURE_POLICY
        value: reinstall
      image: rancher/klipper-helm:v0.8.4-build20240523
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pf8r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: helm-traefik
    serviceAccountName: helm-traefik
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        medium: Memory
      name: klipper-helm
    - emptyDir:
        medium: Memory
      name: klipper-cache
    - emptyDir:
        medium: Memory
      name: klipper-config
    - emptyDir:
        medium: Memory
      name: tmp
    - name: values
      secret:
        defaultMode: 420
        secretName: chart-values-traefik
    - configMap:
        defaultMode: 420
        name: chart-content-traefik
      name: content
    - name: kube-api-access-9pf8r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:43Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:23Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:42Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:42Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b81e6782cb5215d6d27e9eef543f052435bdb170008fe796da50f505e1a01811
      image: docker.io/rancher/klipper-helm:v0.8.4-build20240523
      imageID: docker.io/rancher/klipper-helm@sha256:c2fd922a9a361ac5ec7ef225a46aaaad1e79ec3acc3cf176f60cd09a11683dd5
      lastState: {}
      name: helm
      ready: false
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://b81e6782cb5215d6d27e9eef543f052435bdb170008fe796da50f505e1a01811
          exitCode: 0
          finishedAt: "2024-08-20T08:33:42Z"
          message: |
            Upgrading helm_v3 chart
          reason: Completed
          startedAt: "2024-08-20T08:33:39Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2024-08-20T08:33:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
    creationTimestamp: "2024-08-20T08:33:23Z"
    generateName: helm-install-traefik-crd-
    labels:
      batch.kubernetes.io/controller-uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
      batch.kubernetes.io/job-name: helm-install-traefik-crd
      controller-uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
      helmcharts.helm.cattle.io/chart: traefik-crd
      job-name: helm-install-traefik-crd
    name: helm-install-traefik-crd-f2xjj
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-traefik-crd
      uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
    resourceVersion: "17934"
    uid: b92dcba9-1198-434b-8557-a0b841770d37
  spec:
    containers:
    - args:
      - install
      env:
      - name: NAME
        value: traefik-crd
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
        value: https://%{KUBERNETES_API}%/static/charts/traefik-crd-25.0.3+up25.0.0.tgz
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: AUTH_PASS_CREDENTIALS
        value: "false"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
      - name: FAILURE_POLICY
        value: reinstall
      image: rancher/klipper-helm:v0.8.4-build20240523
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l7nnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: helm-traefik-crd
    serviceAccountName: helm-traefik-crd
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        medium: Memory
      name: klipper-helm
    - emptyDir:
        medium: Memory
      name: klipper-cache
    - emptyDir:
        medium: Memory
      name: klipper-config
    - emptyDir:
        medium: Memory
      name: tmp
    - name: values
      secret:
        defaultMode: 420
        secretName: chart-values-traefik-crd
    - configMap:
        defaultMode: 420
        name: chart-content-traefik-crd
      name: content
    - name: kube-api-access-l7nnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:41Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:23Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://17077636ca8a0a77fa7cb2e3f305dc10d5d0c247b6309da9fa00d07ce6753054
      image: docker.io/rancher/klipper-helm:v0.8.4-build20240523
      imageID: docker.io/rancher/klipper-helm@sha256:c2fd922a9a361ac5ec7ef225a46aaaad1e79ec3acc3cf176f60cd09a11683dd5
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17077636ca8a0a77fa7cb2e3f305dc10d5d0c247b6309da9fa00d07ce6753054
          exitCode: 0
          finishedAt: "2024-08-20T08:33:39Z"
          message: |
            Upgrading helm_v3 chart
          reason: Completed
          startedAt: "2024-08-20T08:33:35Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2024-08-20T08:33:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-24T07:52:39Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-08-20T07:55:41Z"
    generateName: local-path-provisioner-5d56847996-
    labels:
      app: local-path-provisioner
      pod-template-hash: 5d56847996
    name: local-path-provisioner-5d56847996-gmkkf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-5d56847996
      uid: a779d4df-8762-420c-a4f7-2aae48845566
    resourceVersion: "15386"
    uid: c720eb0b-668e-421d-a24a-60e6df94a0b5
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/local-path-provisioner:v0.0.23
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tpqgs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-26-79
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-tpqgs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T07:50:06Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-26T14:12:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:36Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://17bb60c814f8aee46b9814d5d1aa384a19cff89cd4b7185dbd42288707033f0f
      image: docker.io/rancher/local-path-provisioner:v0.0.23
      imageID: docker.io/rancher/local-path-provisioner@sha256:db1a3225290dd8be481a1965fc7040954d0aa0e1f86a77c92816d7c62a02ae5c
      lastState:
        terminated:
          containerID: containerd://bd02614ace344aeb89d6e7af6ce4c69dd8ea6fc90983d91e2c7c8298198ef053
          exitCode: 1
          finishedAt: "2023-04-26T14:12:14Z"
          reason: Error
          startedAt: "2023-04-26T14:11:43Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:12:29Z"
    hostIP: 172.31.26.79
    phase: Running
    podIP: 10.42.1.10
    podIPs:
    - ip: 10.42.1.10
    qosClass: BestEffort
    startTime: "2023-04-24T07:52:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-12T11:07:44Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2023-04-24T07:53:09Z"
    generateName: local-path-provisioner-5d56847996-
    labels:
      app: local-path-provisioner
      pod-template-hash: 5d56847996
    name: local-path-provisioner-5d56847996-hhp9g
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-5d56847996
      uid: a779d4df-8762-420c-a4f7-2aae48845566
    resourceVersion: "15381"
    uid: ad25c02e-29a3-4c0c-ab9d-6c61ae79a5c9
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/local-path-provisioner:v0.0.23
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9skx2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-31-91
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-9skx2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:47:34Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:26Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://8df9b0d9564f1a73e37acaf97a94a0f9d5bd6d918810b7fc332e9b24b325948f
      image: docker.io/rancher/local-path-provisioner:v0.0.23
      imageID: docker.io/rancher/local-path-provisioner@sha256:db1a3225290dd8be481a1965fc7040954d0aa0e1f86a77c92816d7c62a02ae5c
      lastState: {}
      name: local-path-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:07:55Z"
    hostIP: 172.31.31.91
    phase: Running
    podIP: 10.42.0.4
    podIPs:
    - ip: 10.42.0.4
    qosClass: BestEffort
    startTime: "2023-04-12T11:07:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T08:33:24Z"
    generateName: local-path-provisioner-6795b5f9d8-
    labels:
      app: local-path-provisioner
      pod-template-hash: 6795b5f9d8
    name: local-path-provisioner-6795b5f9d8-sjplg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-6795b5f9d8
      uid: 826fd757-6257-4c69-8bd1-9bd35293d312
    resourceVersion: "37999"
    uid: 9d78c8ff-fe08-4c78-b8dd-7a374ec0aaaf
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/local-path-provisioner:v0.0.28
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wpmnw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-wpmnw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3abf02ed33a1abd80b7eabfed1741040cad75733c940d28c086c84bd72d94590
      image: docker.io/rancher/local-path-provisioner:v0.0.28
      imageID: docker.io/rancher/local-path-provisioner@sha256:f77fa34dd9d000daf6fd6029bf05de6b351b4fe4287cbc0ad2abb11a91df2ced
      lastState:
        terminated:
          containerID: containerd://13a2ac4e332122085d978d91361e5d5b73b6bcf97734ba5ee8eabd0d22f5b903
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:10Z"
      name: local-path-provisioner
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:59Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.141
    podIPs:
    - ip: 10.42.2.141
    qosClass: BestEffort
    startTime: "2024-08-20T08:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T08:33:24Z"
    generateName: metrics-server-557ff575fb-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 557ff575fb
    name: metrics-server-557ff575fb-x6kkh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-557ff575fb
      uid: db735062-807c-4897-bce1-d4c50e3c954f
    resourceVersion: "38029"
    uid: f4f0571e-a338-4af4-925b-15bbe1a5c5d0
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
      image: rancher/mirrored-metrics-server:v0.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bvj5h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-bvj5h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a254528109634ac75923a4689294560f3eb99c1269140332627bded094bbef74
      image: docker.io/rancher/mirrored-metrics-server:v0.7.0
      imageID: docker.io/rancher/mirrored-metrics-server@sha256:20b8b36f8cac9e25aa2a0ff35147b13643bfec603e7e7480886632330a3bbc59
      lastState:
        terminated:
          containerID: containerd://7cbdb678fa852b7a32cf7a55c7a38fe4e2700c84824d1a9629dffa38d9e30691
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:15Z"
      name: metrics-server
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:58Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.140
    podIPs:
    - ip: 10.42.2.140
    qosClass: Burstable
    startTime: "2024-08-20T08:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-24T07:52:39Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-08-20T07:55:41Z"
    generateName: metrics-server-7b67f64457-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7b67f64457
    name: metrics-server-7b67f64457-2qt9w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7b67f64457
      uid: 22f4cde6-aee9-442d-952f-6f90b004dbb2
    resourceVersion: "15389"
    uid: 5b96568f-993d-485c-a66b-cfc212fab4f4
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      image: rancher/mirrored-metrics-server:v0.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2qcbr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-26-79
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-2qcbr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T07:50:06Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-26T14:12:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:36Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://001caa584e10622eedfa343605a35acf908059e211c9f941a1720c871c852253
      image: docker.io/rancher/mirrored-metrics-server:v0.6.2
      imageID: docker.io/rancher/mirrored-metrics-server@sha256:16185c0d4d01f8919eca4779c69a374c184200cd9e6eded9ba53052fd73578df
      lastState:
        terminated:
          containerID: containerd://0d5b7f9017ef4fbb1d9a9c5f0fae2f1a5f955b073987a78f2785aa96ed632894
          exitCode: 2
          finishedAt: "2023-04-26T14:12:13Z"
          reason: Error
          startedAt: "2023-04-26T14:11:42Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:12:30Z"
    hostIP: 172.31.26.79
    phase: Running
    podIP: 10.42.1.8
    podIPs:
    - ip: 10.42.1.8
    qosClass: Burstable
    startTime: "2023-04-24T07:52:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-12T11:07:44Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2023-04-24T07:53:09Z"
    generateName: metrics-server-7b67f64457-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7b67f64457
    name: metrics-server-7b67f64457-bvzfn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7b67f64457
      uid: 22f4cde6-aee9-442d-952f-6f90b004dbb2
    resourceVersion: "15379"
    uid: ad2c7072-f883-4e4a-a630-9181a0456651
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      image: rancher/mirrored-metrics-server:v0.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xsqcm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-31-91
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-xsqcm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:47:34Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:07:45Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:26Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://a0452b794d7b54d8a255bc2afba56f31329c437462fc940087498efe6f08452e
      image: docker.io/rancher/mirrored-metrics-server:v0.6.2
      imageID: docker.io/rancher/mirrored-metrics-server@sha256:16185c0d4d01f8919eca4779c69a374c184200cd9e6eded9ba53052fd73578df
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:07:55Z"
    hostIP: 172.31.31.91
    phase: Running
    podIP: 10.42.0.2
    podIPs:
    - ip: 10.42.0.2
    qosClass: Burstable
    startTime: "2023-04-12T11:07:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-12T11:08:03Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-08-20T08:33:54Z"
    generateName: svclb-traefik-704ea2dd-
    labels:
      app: svclb-traefik-704ea2dd
      controller-revision-hash: 75479bbf8
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-704ea2dd-6kzqp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik-704ea2dd
      uid: 63d8e9af-0f9d-4d25-a66c-f5ab10be46bf
    resourceVersion: "15617"
    uid: 8f7a5dc0-1ba4-472e-83e0-206e138307ac
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-172-31-31-91
    automountServiceAccountToken: false
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.0
      imagePullPolicy: IfNotPresent
      name: lb-tcp-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-tcp-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - env:
      - name: SRC_PORT
        value: "443"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.0
      imagePullPolicy: IfNotPresent
      name: lb-tcp-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-tcp-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-31-91
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      sysctls:
      - name: net.ipv4.ip_forward
        value: "1"
    serviceAccount: svclb
    serviceAccountName: svclb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:47:34Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1ffdd4479b333caa59f48ee273a6e465af4c015f10e5b2071c717c9a6ad640c5
      image: docker.io/rancher/klipper-lb:v0.4.0
      imageID: docker.io/rancher/klipper-lb@sha256:5832990290d371fe757f92577f50aa7a290b00fe1294d481eabb4a3aceff4dfa
      lastState: {}
      name: lb-tcp-443
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:08:06Z"
    - containerID: containerd://32acd057d4a725979e9223a9e89a53d57248824a9c8b68d11720ffb2ae0955be
      image: docker.io/rancher/klipper-lb:v0.4.0
      imageID: docker.io/rancher/klipper-lb@sha256:5832990290d371fe757f92577f50aa7a290b00fe1294d481eabb4a3aceff4dfa
      lastState: {}
      name: lb-tcp-80
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:08:06Z"
    hostIP: 172.31.31.91
    phase: Running
    podIP: 10.42.0.7
    podIPs:
    - ip: 10.42.0.7
    qosClass: BestEffort
    startTime: "2023-04-12T11:08:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T08:33:26Z"
    generateName: svclb-traefik-704ea2dd-
    labels:
      app: svclb-traefik-704ea2dd
      controller-revision-hash: 8758c47c6
      pod-template-generation: "2"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-704ea2dd-dbcw7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik-704ea2dd
      uid: 63d8e9af-0f9d-4d25-a66c-f5ab10be46bf
    resourceVersion: "38045"
    uid: b8efacab-deef-4009-9910-3cfa5d7ea546
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-172-31-15-74
    automountServiceAccountToken: false
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.7
      imagePullPolicy: IfNotPresent
      name: lb-tcp-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-tcp-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - env:
      - name: SRC_PORT
        value: "443"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.7
      imagePullPolicy: IfNotPresent
      name: lb-tcp-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-tcp-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      sysctls:
      - name: net.ipv4.ip_forward
        value: "1"
      - name: net.ipv6.conf.all.forwarding
        value: "1"
    serviceAccount: svclb
    serviceAccountName: svclb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5d7530655529d553bc20d756796f68878664fd9fbc6bf3948a0676c8a7e8590
      image: docker.io/rancher/klipper-lb:v0.4.7
      imageID: docker.io/rancher/klipper-lb@sha256:558dcf96bf0800d9977ef46dca18411752618cd9dd06daeb99460c0a301d0a60
      lastState:
        terminated:
          containerID: containerd://2a5f0a34de70c5a41245e67a8fe010c1d64fb4c693c1a029b2c73844113f221d
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:15Z"
      name: lb-tcp-443
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:41:07Z"
    - containerID: containerd://66486694f06689151239c1c747a277bec2fa5b5d69ad639b45900041823fe767
      image: docker.io/rancher/klipper-lb:v0.4.7
      imageID: docker.io/rancher/klipper-lb@sha256:558dcf96bf0800d9977ef46dca18411752618cd9dd06daeb99460c0a301d0a60
      lastState:
        terminated:
          containerID: containerd://93d345f707e1ffc3e728e58beb6fd12f9729933a55a7e5b00e95b06e6174b763
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:13Z"
      name: lb-tcp-80
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:41:05Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.144
    podIPs:
    - ip: 10.42.2.144
    qosClass: BestEffort
    startTime: "2024-08-20T08:33:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-24T07:46:55Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-08-20T08:33:54Z"
    generateName: svclb-traefik-704ea2dd-
    labels:
      app: svclb-traefik-704ea2dd
      controller-revision-hash: 75479bbf8
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-704ea2dd-jrk56
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik-704ea2dd
      uid: 63d8e9af-0f9d-4d25-a66c-f5ab10be46bf
    resourceVersion: "15622"
    uid: 7d1be191-5f6b-4a4c-9314-c28f52a18bcb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-172-31-26-79
    automountServiceAccountToken: false
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.0
      imagePullPolicy: IfNotPresent
      name: lb-tcp-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-tcp-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - env:
      - name: SRC_PORT
        value: "443"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IPS
        value: 10.43.179.115
      image: rancher/klipper-lb:v0.4.0
      imagePullPolicy: IfNotPresent
      name: lb-tcp-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-tcp-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-26-79
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      sysctls:
      - name: net.ipv4.ip_forward
        value: "1"
    serviceAccount: svclb
    serviceAccountName: svclb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:46:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T07:50:06Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-26T14:11:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:46:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c513ce6e5d7eef867ad92ee23ed33db5308840d86395393296b1df55fef114e3
      image: docker.io/rancher/klipper-lb:v0.4.0
      imageID: docker.io/rancher/klipper-lb@sha256:5832990290d371fe757f92577f50aa7a290b00fe1294d481eabb4a3aceff4dfa
      lastState:
        terminated:
          containerID: containerd://df5ee7f52bb0e340f8456dcab279a8979acc093967c39703cde57ff00579f981
          exitCode: 255
          finishedAt: "2023-04-26T14:11:24Z"
          reason: Unknown
          startedAt: "2023-04-24T07:47:09Z"
      name: lb-tcp-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:11:46Z"
    - containerID: containerd://4a46bef861931d9737b97e60b82f3045f2e526dfa5e5754748d16731e805ce8e
      image: docker.io/rancher/klipper-lb:v0.4.0
      imageID: docker.io/rancher/klipper-lb@sha256:5832990290d371fe757f92577f50aa7a290b00fe1294d481eabb4a3aceff4dfa
      lastState:
        terminated:
          containerID: containerd://b70b2ae56af85553ff9e9097fdb6d61c118a60ab70ea5f6dbbc923b04ead34ee
          exitCode: 255
          finishedAt: "2023-04-26T14:11:24Z"
          reason: Unknown
          startedAt: "2023-04-24T07:47:09Z"
      name: lb-tcp-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:11:45Z"
    hostIP: 172.31.26.79
    phase: Running
    podIP: 10.42.1.9
    podIPs:
    - ip: 10.42.1.9
    qosClass: BestEffort
    startTime: "2023-04-24T07:46:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9100"
      prometheus.io/scrape: "true"
    creationTimestamp: "2023-04-24T07:52:39Z"
    deletionGracePeriodSeconds: 60
    deletionTimestamp: "2024-08-20T07:56:11Z"
    generateName: traefik-56b8c5fb5c-
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-20.3.1_up20.3.0
      pod-template-hash: 56b8c5fb5c
    name: traefik-56b8c5fb5c-5cchb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-56b8c5fb5c
      uid: ae7cd53e-a880-4aaf-bcc4-9b56590cc198
    resourceVersion: "15387"
    uid: 04776d06-464c-4fad-a704-61afc288b25d
  spec:
    containers:
    - args:
      - --global.checknewversion
      - --global.sendanonymoususage
      - --entrypoints.metrics.address=:9100/tcp
      - --entrypoints.traefik.address=:9000/tcp
      - --entrypoints.web.address=:8000/tcp
      - --entrypoints.websecure.address=:8443/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --providers.kubernetescrd
      - --providers.kubernetesingress
      - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
      - --entrypoints.websecure.http.tls=true
      image: rancher/mirrored-library-traefik:2.9.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 9100
        name: metrics
        protocol: TCP
      - containerPort: 9000
        name: traefik
        protocol: TCP
      - containerPort: 8000
        name: web
        protocol: TCP
      - containerPort: 8443
        name: websecure
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnn4k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-26-79
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65532
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-cnn4k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T07:50:06Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-26T14:11:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:52:40Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:36Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://3d595f3db3f6de6205b4095cfe49ed12f4e49afda400bfa52b31ae4c5a9b011e
      image: docker.io/rancher/mirrored-library-traefik:2.9.4
      imageID: docker.io/rancher/mirrored-library-traefik@sha256:0842af6afcdf4305d17e862bad4eaf379d0817c987eedabeaff334e2273459c1
      lastState:
        terminated:
          containerID: containerd://9cf281619dda4f9561b529096e4ec0bd88f11b7416d50e173a0cf0c777961491
          exitCode: 255
          finishedAt: "2023-04-26T14:11:24Z"
          reason: Unknown
          startedAt: "2023-04-24T07:52:41Z"
      name: traefik
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-04-26T14:11:42Z"
    hostIP: 172.31.26.79
    phase: Running
    podIP: 10.42.1.7
    podIPs:
    - ip: 10.42.1.7
    qosClass: BestEffort
    startTime: "2023-04-24T07:52:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9100"
      prometheus.io/scrape: "true"
    creationTimestamp: "2023-04-12T11:08:02Z"
    deletionGracePeriodSeconds: 60
    deletionTimestamp: "2023-04-24T07:53:39Z"
    generateName: traefik-56b8c5fb5c-
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-20.3.1_up20.3.0
      pod-template-hash: 56b8c5fb5c
    name: traefik-56b8c5fb5c-wdmx5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-56b8c5fb5c
      uid: ae7cd53e-a880-4aaf-bcc4-9b56590cc198
    resourceVersion: "15378"
    uid: a5d6dac6-d0e7-462d-a88d-131dd29eef37
  spec:
    containers:
    - args:
      - --global.checknewversion
      - --global.sendanonymoususage
      - --entrypoints.metrics.address=:9100/tcp
      - --entrypoints.traefik.address=:9000/tcp
      - --entrypoints.web.address=:8000/tcp
      - --entrypoints.websecure.address=:8443/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --providers.kubernetescrd
      - --providers.kubernetesingress
      - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
      - --entrypoints.websecure.http.tls=true
      image: rancher/mirrored-library-traefik:2.9.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 9100
        name: metrics
        protocol: TCP
      - containerPort: 9000
        name: traefik
        protocol: TCP
      - containerPort: 8000
        name: web
        protocol: TCP
      - containerPort: 8443
        name: websecure
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pbh6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-31-91
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65532
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-pbh6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-24T07:47:34Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-12T11:08:02Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:32:26Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://e56d8dae4a15d7289283b6cbed0e7acec641f802a435f1d37d3564cb9a89bfd9
      image: docker.io/rancher/mirrored-library-traefik:2.9.4
      imageID: docker.io/rancher/mirrored-library-traefik@sha256:0842af6afcdf4305d17e862bad4eaf379d0817c987eedabeaff334e2273459c1
      lastState: {}
      name: traefik
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-12T11:08:08Z"
    hostIP: 172.31.31.91
    phase: Running
    podIP: 10.42.0.8
    podIPs:
    - ip: 10.42.0.8
    qosClass: BestEffort
    startTime: "2023-04-12T11:08:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9100"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-08-20T08:33:41Z"
    generateName: traefik-5fb479b77-
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-25.0.3_up25.0.0
      pod-template-hash: 5fb479b77
    name: traefik-5fb479b77-lfcjl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-5fb479b77
      uid: 11b2a1a9-c5d5-41ab-9218-58b3cf81f340
    resourceVersion: "38021"
    uid: 036cc28a-8caa-472b-a728-879bfc372dcf
  spec:
    containers:
    - args:
      - --global.checknewversion
      - --global.sendanonymoususage
      - --entrypoints.metrics.address=:9100/tcp
      - --entrypoints.traefik.address=:9000/tcp
      - --entrypoints.web.address=:8000/tcp
      - --entrypoints.websecure.address=:8443/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --providers.kubernetescrd
      - --providers.kubernetesingress
      - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
      - --entrypoints.websecure.http.tls=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/mirrored-library-traefik:2.10.7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 9100
        name: metrics
        protocol: TCP
      - containerPort: 9000
        name: traefik
        protocol: TCP
      - containerPort: 8000
        name: web
        protocol: TCP
      - containerPort: 8443
        name: websecure
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s7snq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-s7snq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T08:33:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://03b6cb2248351dbf013ab90622be6a949517b9199f687d1e3fb4c12db720c68c
      image: docker.io/rancher/mirrored-library-traefik:2.10.7
      imageID: docker.io/rancher/mirrored-library-traefik@sha256:606c4c924d9edd6d028a010c8f173dceb34046ed64fabdbce9ff29b2cf2b3042
      lastState:
        terminated:
          containerID: containerd://469fd89ebd06ffc8db54d41ae16edc75d7c785c3c0390a4cdcbed5ca00449486
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:14Z"
      name: traefik
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:55Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.138
    podIPs:
    - ip: 10.42.2.138
    qosClass: BestEffort
    startTime: "2024-08-20T08:33:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-24T21:54:25Z"
    generateName: fastapi-6d48b4cc8f-
    labels:
      app: fastapi
      pod-template-hash: 6d48b4cc8f
    name: fastapi-6d48b4cc8f-vxcg9
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fastapi-6d48b4cc8f
      uid: a16f5186-5e14-4886-b678-80a771e4ce2f
    resourceVersion: "39072"
    uid: 6180defe-a64c-4cfe-ae8c-d1ddba94707e
  spec:
    containers:
    - env:
      - name: DATABASE_URL
        value: postgresql://admin:password@db:5432/storedb
      image: surabhiharsha5/fastapi:latest
      imagePullPolicy: Always
      name: fastapi
      ports:
      - containerPort: 5000
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gdmt8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gdmt8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a80c1133b65cd73ea492d98ab8fdc288d2a8481a75c7df516aacf0b6e55a62c0
      image: docker.io/surabhiharsha5/fastapi:latest
      imageID: docker.io/surabhiharsha5/fastapi@sha256:26adcab1d658b9500185dbe9abb0a1ee534cd15b2ea35e7fe530ff9d96f20307
      lastState:
        terminated:
          containerID: containerd://eae92077bc2353e486b9ab9c091b448ba1b44de5bcd0c654efecd9a5032363f2
          exitCode: 1
          finishedAt: "2024-08-24T21:54:33Z"
          reason: Error
          startedAt: "2024-08-24T21:54:32Z"
      name: fastapi
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:54:46Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.156
    podIPs:
    - ip: 10.42.2.156
    qosClass: Burstable
    startTime: "2024-08-24T21:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-24T21:54:25Z"
    generateName: fastapi-6d48b4cc8f-
    labels:
      app: fastapi
      pod-template-hash: 6d48b4cc8f
    name: fastapi-6d48b4cc8f-xzfvh
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fastapi-6d48b4cc8f
      uid: a16f5186-5e14-4886-b678-80a771e4ce2f
    resourceVersion: "39093"
    uid: e609a226-17e3-4412-ac8e-3396a68ea69f
  spec:
    containers:
    - env:
      - name: DATABASE_URL
        value: postgresql://admin:password@db:5432/storedb
      image: surabhiharsha5/fastapi:latest
      imagePullPolicy: Always
      name: fastapi
      ports:
      - containerPort: 5000
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hlhd5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hlhd5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dff9f530ae628880a965e32ef80048c46c290f7a76ab01bf936f35b5c699c226
      image: docker.io/surabhiharsha5/fastapi:latest
      imageID: docker.io/surabhiharsha5/fastapi@sha256:26adcab1d658b9500185dbe9abb0a1ee534cd15b2ea35e7fe530ff9d96f20307
      lastState:
        terminated:
          containerID: containerd://cc62df2c4d1b8ffb869111ed0237ef66645836db44f36dee3e1c8b77116d3a0a
          exitCode: 1
          finishedAt: "2024-08-24T21:54:33Z"
          reason: Error
          startedAt: "2024-08-24T21:54:31Z"
      name: fastapi
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:54:48Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.157
    podIPs:
    - ip: 10.42.2.157
    qosClass: Burstable
    startTime: "2024-08-24T21:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-24T21:54:25Z"
    generateName: fastapi-6d48b4cc8f-
    labels:
      app: fastapi
      pod-template-hash: 6d48b4cc8f
    name: fastapi-6d48b4cc8f-zxx9c
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fastapi-6d48b4cc8f
      uid: a16f5186-5e14-4886-b678-80a771e4ce2f
    resourceVersion: "39088"
    uid: f80b7850-2049-4748-88f3-3a5d3ba3755d
  spec:
    containers:
    - env:
      - name: DATABASE_URL
        value: postgresql://admin:password@db:5432/storedb
      image: surabhiharsha5/fastapi:latest
      imagePullPolicy: Always
      name: fastapi
      ports:
      - containerPort: 5000
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rmr6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rmr6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b441178f426f09181c70991e41340c62a81d851021146f8cf76401eb0090498d
      image: docker.io/surabhiharsha5/fastapi:latest
      imageID: docker.io/surabhiharsha5/fastapi@sha256:26adcab1d658b9500185dbe9abb0a1ee534cd15b2ea35e7fe530ff9d96f20307
      lastState:
        terminated:
          containerID: containerd://b2396002e7c0e2ae28e9a231a1deb3a8af96ae7c8f65d8a3650ccf036f9fd43c
          exitCode: 1
          finishedAt: "2024-08-24T21:54:32Z"
          reason: Error
          startedAt: "2024-08-24T21:54:30Z"
      name: fastapi
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:54:48Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.154
    podIPs:
    - ip: 10.42.2.154
    qosClass: Burstable
    startTime: "2024-08-24T21:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-24T21:54:25Z"
    generateName: pgadmin-fbf74c6c5-
    labels:
      app: pgadmin
      pod-template-hash: fbf74c6c5
    name: pgadmin-fbf74c6c5-slcl2
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pgadmin-fbf74c6c5
      uid: 60a4a4f5-9e84-4056-b889-8fe28c2f8520
    resourceVersion: "38971"
    uid: 61615bce-e8c5-4b7f-ad1e-08e1384dcd8c
  spec:
    containers:
    - env:
      - name: PGADMIN_DEFAULT_EMAIL
        value: admin@admin.com
      - name: PGADMIN_DEFAULT_PASSWORD
        value: root
      image: dpage/pgadmin4:latest
      imagePullPolicy: Always
      name: pgadmin
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6jpdd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6jpdd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bed40cef8da0bd7c1057cfa737b828ef869526030c878f9f7b91b05bbe917e4c
      image: docker.io/dpage/pgadmin4:latest
      imageID: docker.io/dpage/pgadmin4@sha256:822dd7a1fa68601f70b3e06445c9cb52b134862b0c43f0f7a96ab6ac44a592a4
      lastState: {}
      name: pgadmin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:54:27Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.155
    podIPs:
    - ip: 10.42.2.155
    qosClass: BestEffort
    startTime: "2024-08-24T21:54:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-24T21:54:25Z"
    generateName: postgres-7c4db445f-
    labels:
      app: postgres
      pod-template-hash: 7c4db445f
    name: postgres-7c4db445f-gtkhd
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgres-7c4db445f
      uid: 41f58fdb-8e31-4991-b7b2-28d804c0a8c5
    resourceVersion: "39053"
    uid: a6fce5a5-c625-4db3-ad01-7f3ef1a7db27
  spec:
    containers:
    - env:
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            key: POSTGRES_USER
            name: postgres-secret
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: POSTGRES_PASSWORD
            name: postgres-secret
      - name: POSTGRES_DB
        valueFrom:
          configMapKeyRef:
            key: POSTGRES_DB
            name: postgres-config
      image: postgres:12.0-alpine
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data/
        name: postgres-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-87qq5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: postgres-storage
      persistentVolumeClaim:
        claimName: postgres-pvc
    - name: kube-api-access-87qq5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:54:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c716f8792445a585640ac04f4213152125323c34114736259e7985846e99015
      image: docker.io/library/postgres:12.0-alpine
      imageID: docker.io/library/postgres@sha256:5115ec0afd378e91b5eed848a7e0ae0a9c7995fe05ad14f1eb3038bcf53acbf7
      lastState: {}
      name: postgres
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:54:34Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.159
    podIPs:
    - ip: 10.42.2.159
    qosClass: BestEffort
    startTime: "2024-08-24T21:54:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T12:21:25Z"
    generateName: app-fastapi-85f6bc55bd-
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd-6lg9k
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: app-fastapi-85f6bc55bd
      uid: afd64121-d197-4c3f-bf37-be5203dcf967
    resourceVersion: "38007"
    uid: e4640867-0abb-422d-b0ea-d54e6b969a0a
  spec:
    containers:
    - image: surabhiharsha5/datascientestapi:v.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: fastapi
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsgks
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: app-fastapi
    serviceAccountName: app-fastapi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qsgks
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:21:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:21:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ebb2a16960bd10389b1095b451ce6d2ff5e9fc43c439652b6d093078ef16e6fe
      image: docker.io/surabhiharsha5/datascientestapi:v.13.0
      imageID: docker.io/surabhiharsha5/datascientestapi@sha256:bde3d04ce95347412183d9c8b349d6f2d4d0c72bdc66697bb6c2000ff5acc9dc
      lastState:
        terminated:
          containerID: containerd://ff94c762c38905d359420741f03505a1fe3e673182491a2e80056ec98e67f383
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:11Z"
      name: fastapi
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:52Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.137
    podIPs:
    - ip: 10.42.2.137
    qosClass: BestEffort
    startTime: "2024-08-20T12:21:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-20T12:15:28Z"
    generateName: app-fastapi-85f6bc55bd-
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd-4rt4g
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: app-fastapi-85f6bc55bd
      uid: 6fae3ba3-8fc5-4039-a72e-4935c5cb213e
    resourceVersion: "38019"
    uid: 47fb8669-f46b-47b5-bc39-bf93efa1d1be
  spec:
    containers:
    - image: surabhiharsha5/datascientestapi:v.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: fastapi
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4cvn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-172-31-15-74
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: app-fastapi
    serviceAccountName: app-fastapi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l4cvn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:15:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-24T21:41:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-20T12:15:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://00ed1cac41105aa1919132797b712ea814ce16cd82614e12086655b1f36fde2b
      image: docker.io/surabhiharsha5/datascientestapi:v.13.0
      imageID: docker.io/surabhiharsha5/datascientestapi@sha256:bde3d04ce95347412183d9c8b349d6f2d4d0c72bdc66697bb6c2000ff5acc9dc
      lastState:
        terminated:
          containerID: containerd://431757214e02ff368e172a927eb1db14206c35ea2735a2c061e1892f14fa2292
          exitCode: 255
          finishedAt: "2024-08-24T21:40:37Z"
          reason: Unknown
          startedAt: "2024-08-24T19:23:10Z"
      name: fastapi
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2024-08-24T21:40:48Z"
    hostIP: 172.31.15.74
    hostIPs:
    - ip: 172.31.15.74
    phase: Running
    podIP: 10.42.2.134
    podIPs:
    - ip: 10.42.2.134
    qosClass: BestEffort
    startTime: "2024-08-20T12:15:28Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-04-12T11:07:28Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "192"
    uid: a6ed330d-7453-48a6-9e45-a8622247b71b
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T10:45:40Z"
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: dev
    resourceVersion: "18803"
    uid: 5b73227d-851e-49ac-977c-1fed660827a8
  spec:
    clusterIP: 10.43.101.203
    clusterIPs:
    - 10.43.101.203
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31629
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: app
      app.kubernetes.io/name: fastapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4ySQYvbMBCF/0p5Z9m142TjFfRQdimUQgmk7aXsQZYnG9W2JKRJSgj+70WJl00b0vZm8958vHmjI5Q33yhE4ywk9iUEOmNbSKwp7I0mCAzEqlWsII9Q1jpWbJyN6dc1P0hzJM6DcblWzD3lxr01iQBxU3c/LYXsed9BoqvihbIvxZtPxrbv3rets/9EWDUQJLQL1Nr4X/bolU4z3a6hLB4i0wABH9xAvKVdTG7vAkPivlxUV1rUQfkE4LAjjAK9aqg/1dHVMVPev8DPidJnsMR0mtb9LjKFLE71Tpg/bdNeDy7Q4+f1X/baqriFRKNpVlez+7ouy+W8UkVV36lmURab2eZuSZvlfDYv9GKZ8k7si4i3ahkFoiedVptyf1xBoizyeZUXeVlAvAoR8vul9CRg/Ac1mP6wcr3Rh/SojH3uac1Kd6lXFzhNHV8indOcy19Up+LZaddD4uvjCqO4dGas/S33l4ff3ANxMPqVne567X8SiNSTZhduHHMcx18BAAD//5X9LCMyAwAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2023-04-12T11:07:32Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "15466"
    uid: 5cef2dcd-4bad-4996-914a-b839affcfd45
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4SQQWsbMRCF/0p5Z9nNep04FfRQWnopBUNKL6WHWe04VleWhGa8xZj970UbFxLaJCchvZn3vqczKPvvXMSnCIuxgcHgYw+LOy6jdwyDAyv1pAR7BsWYlNSnKPWaul/sVFiXxaelI9XAS5/e+uoA86yefkcui/txgMXQyiNlbMybLz727z/0fYqvWkQ6MGxFLN7JQriMXObjgf31bcnkqsVw7HghJ1E+YDII1HGYO1ahRFaWuujCUfRRhIWWY016Onbh+vqE6wWePckeFnTdt527uWrc7abhZtXuqF11q83uev2uu2HabK46t1tTJfxvdTy8P1NKMrtayefPdPDhtE3BuxMstoV3XD4dKdwpuQEGORUV2B/nvzl71SwXAXa9bg1ySZpcCrD49nELA6Vyz7qdJy4L008D4cBOU5l/81YWlPO/4NM0/QkAAP//sKxN444CAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2023-04-12T11:07:33Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "15501"
    uid: 9a74ab41-a0bd-4720-921d-f72975f4f8e6
  spec:
    clusterIP: 10.43.165.42
    clusterIPs:
    - 10.43.165.42
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2023-04-12T11:08:02Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-25.0.3_up25.0.0
    name: traefik
    namespace: kube-system
    resourceVersion: "25597"
    uid: 704ea2dd-8034-4570-bba9-002678970b1b
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.179.115
    clusterIPs:
    - 10.43.179.115
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: web
      nodePort: 32674
      port: 80
      protocol: TCP
      targetPort: web
    - name: websecure
      nodePort: 32693
      port: 443
      protocol: TCP
      targetPort: websecure
    selector:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/name: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 172.31.15.74
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"db","namespace":"kustomize"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"app":"postgres"}}}
    creationTimestamp: "2024-08-24T21:54:24Z"
    name: db
    namespace: kustomize
    resourceVersion: "38873"
    uid: 5e78e8f3-d3e6-40f9-9c71-f18181f1c38f
  spec:
    clusterIP: 10.43.37.199
    clusterIPs:
    - 10.43.37.199
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"fastapi","namespace":"kustomize"},"spec":{"ports":[{"nodePort":32000,"port":80,"protocol":"TCP","targetPort":5000}],"selector":{"app":"fastapi"},"type":"NodePort"}}
    creationTimestamp: "2024-08-24T21:54:24Z"
    name: fastapi
    namespace: kustomize
    resourceVersion: "38878"
    uid: 905e70f7-94a0-467d-9805-22a86e4316a9
  spec:
    clusterIP: 10.43.110.16
    clusterIPs:
    - 10.43.110.16
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32000
      port: 80
      protocol: TCP
      targetPort: 5000
    selector:
      app: fastapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"pgadmin","namespace":"kustomize"},"spec":{"ports":[{"port":80,"targetPort":80}],"selector":{"app":"pgadmin"},"type":"NodePort"}}
    creationTimestamp: "2024-08-24T21:54:24Z"
    name: pgadmin
    namespace: kustomize
    resourceVersion: "38883"
    uid: 100ec9a0-fb4f-4b14-8788-f1c5adc83ad5
  spec:
    clusterIP: 10.43.156.104
    clusterIPs:
    - 10.43.156.104
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31557
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: pgadmin
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:34:23Z"
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: prod
    resourceVersion: "20388"
    uid: 397f683e-8feb-442f-9d85-987a3509adf8
  spec:
    clusterIP: 10.43.174.196
    clusterIPs:
    - 10.43.174.196
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31366
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: app
      app.kubernetes.io/name: fastapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T10:45:41Z"
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: staging
    resourceVersion: "18825"
    uid: 6c80261e-2a58-4078-8c8a-08356e78e6c7
  spec:
    clusterIP: 10.43.69.198
    clusterIPs:
    - 10.43.69.198
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32117
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: app
      app.kubernetes.io/name: fastapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8RVTW/jNhD9K8WcZUVeO18CegiSoAjadQzb28vCCEbkyGZNkQQ50sYI/N8LykpW6dpJUKBb+GCQnHnkvDd68wTo1J/kg7IGckDnwkkzhAQ2ykjI4QapsmZODAlUxCiREfInQGMsIytrQlza4i8SHIhTr2wqkFlTquyJihiQHD233wz5warZQA4nzTD55Xdl5K9z8o0S9G6ewYogB/ZIpdp8KDw4FDFnUxc0CNvAVMEuAeGpLWahKgqMlYPc1FonoLEg/WaJawxryOFidFaKQlD26ZM8lUinxejs7HJc0pCwHF1cissRludSQAKhEcIa9lZr8ulmFHpoxkoKpEmw9ZBDiTrQOymhET8Q8YH4I0x0UKERuhh0gIPzbEz4SUrYnx9JDY5EZOr7+5+gQhbrP15IROeOg+92CTBVTiNTm9vrtw8I9Cb2z6OwRwTWbCtbG+4a+kqIuFrYDRnIW20TiJegMuQD5F+fgEzT/nfvmc+uH6b3swUk0KCu49ZFBrvkVcDsavLb7bwXkqXt7+RV5M3tfPEwnd0v7nuRi+vpjzFv3ddG3E37tw2zdDxKh+eX6XB4CrtlAqrCVTzxaMSa/MlGK+fID3SRN1k6Ts+hi5nWWk+tVmILOdyVE8tTT4EMw0snRjWFG1xkkICznvc0vbA2tZ4hv8gSWNvA31eHsr1lK6x+LnuZgKdgay8oNlAUjkTtFW+vrWF65Lbx0GGhtGJF+y6TEvKvMLldPFzdfL6bwHK3i/S8r9t4PPq5wv3jwv9LufiMN6Qbj0d97drlQYD/TL1lBFe2TdUYwqSzwPaDHkRHHgivWAnUcPCWsA2Cdejrb4hT5ZpxqtxDaf039LLPe1+XLvQsFdaUKWqddgnKrF7nLNsi+1Yy6bk1JMBWk3+eytFMypIEQw4TOxdrkrWOw2RDUbO2Lm81pdG+vCGmEL2twsDk4zB1EasdQ7ePKnBoH/1vIDsfHTiNho4i7zGuO6avpLQm3Bu9PZywjEZbO4lMc/bItNpGKaJdK7P60h7sB9DjF4MNKo2FJsiHcchsXWRt9iq2NW5GrttGEbX3ZHhSVwX550Il5FkCkoLyJA8dmXbvswrhwPaMUG4hz3a7vwMAAP//cTag9XUJAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2023-04-12T11:08:02Z"
    generation: 2
    labels:
      objectset.rio.cattle.io/hash: 836fcbce022d5dae5b36694fe1eaf389c93af7dc
      svccontroller.k3s.cattle.io/nodeselector: "false"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-704ea2dd
    namespace: kube-system
    resourceVersion: "15713"
    uid: 63d8e9af-0f9d-4d25-a66c-f5ab10be46bf
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik-704ea2dd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik-704ea2dd
          svccontroller.k3s.cattle.io/svcname: traefik
          svccontroller.k3s.cattle.io/svcnamespace: kube-system
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: SRC_RANGES
            value: 0.0.0.0/0
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IPS
            value: 10.43.179.115
          image: rancher/klipper-lb:v0.4.7
          imagePullPolicy: IfNotPresent
          name: lb-tcp-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-tcp-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: SRC_RANGES
            value: 0.0.0.0/0
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IPS
            value: 10.43.179.115
          image: rancher/klipper-lb:v0.4.7
          imagePullPolicy: IfNotPresent
          name: lb-tcp-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-tcp-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          sysctls:
          - name: net.ipv4.ip_forward
            value: "1"
          - name: net.ipv6.conf.all.forwarding
            value: "1"
        serviceAccount: svclb
        serviceAccountName: svclb
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 2
    numberReady: 1
    observedGeneration: 2
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T10:45:40Z"
    generation: 10
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: dev
    resourceVersion: "22349"
    uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-20T11:59:25Z"
      lastUpdateTime: "2024-08-20T11:59:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-20T11:19:51Z"
      lastUpdateTime: "2024-08-20T12:15:31Z"
      message: ReplicaSet "app-fastapi-85f6bc55bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 10
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xVQW/bOBP9Kx/mLMVW0jaugO/QtbPboq3XqJNeCqOgqZHFNcXhkiMnRqD/vhjJduw2TdrFniyTb4ZvHucN70F58xlDNOQgB+V9HGwySGBtXAE5TNBb2tboGBKokVWhWEF+D8o5YsWGXJS/tPwLNUfks2DoTCtmi2eGBkaSQPLDfbp1GNLVZg05rC/i0c4mS/733rji/2+KgtyzKZyqEXLQFLBw8afg0SstMetmiWncRsYa2gSsWqLtilqPYqq830P6vPIZHDJGybY7dkwBJ9P5E8dWKlaQw1Lj+eji/PVolGWXLy7U8GL0Si1fZsPyvHx1ieXli/MXQ/3yUoh8V9ITpKNHLZQDbozc5VsTmcL2g6kNQz5MIKJFzRQEVCvW1YenymwlJQfFuNp2acla41Y3vlCMfYq7G6c2yli1tAh51ibAWy/MPp1gZR1rb/dxRy30pNDtUVGaHCvjMETIv9yDCiv5gFSTKyGBAbIe7FQayE2UxiIsEjC1WgmjoJyuMAxqE4LA0h14/5tnZ9nwTLq+i5g11s7IGr2FHN6VU+JZwNhbwJoNOoxxFmjZFVQqY5uA11XAWJEtIL9IoGL2fyDLvlcs9z6oUFmuIAFPgSEfDUdyKbrC7o7fXl/PRCrjDBtlJ2jVdo6aXBEhfzVMwGMwVByWMglutMYYj07OEmBTIzX8AHysj4RCL+VB2VnH6uXFAb1DBmLSZCGHm4kwfCYkZe1Pw67Hj4a9zo4Ca+RgdHwkcJFAQFWYfyW5RG4fFM9G2c8q/r3g57+gd8BITdDYtbYVB8a+9WsK0lLZ5fCjgQ74d4Ox39W+ka3hsO4G7Q7aI8UKqJtgeDsmx3jXlamspdtZMBtjcYVXUSvbzWPIS2UjJqCVV0tjDZueiioKsc306vrrb++mk6/zq0+f342vxClFIC97ylpYtL3ofzq7/UTEvxuLu0GTc2iwTWBDtqnxIzVu10e1fM52uh/ZEY66z5VmlfaR8HDCPuePcwx0E5nqo1Td//SZjAtpnsLFg5MnWKrGiokdFTg/moenI50i5GCNa+7kjnww1AlvVYzTnkCvRqptExlDqoNho5UFuaawMRrfaC3FTL81HpPFsH80v9zDGoXYeBffPXSxKyEB8oIUfnB1Z6RJRCMsS9QMOUxprissGiuV92mkqjSQxbPTesR5gWzqrXL4n2auldT/eMqFVOvJ0mo793I1Y3Lyoph9y3TTf/7Lr1Kt7uZrvO3NtzvgfcfylFtFkbt+SeC2QnfjomITS9M/VzChKfGhUGHb99FhLJZm9VF5IWIY65Pr2r8wyX7SHFZEyB40pQLfkihxQD0syXHfDOX2B0bZjc4HNqdx6cEb5KWtlD149CmztIu2bdt/AgAA//+BDg8J/AkAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2023-04-12T11:07:32Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "18088"
    uid: cfcaeee9-3295-4c0b-8fda-2534353caf64
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/mirrored-coredns-coredns:1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-04-12T11:07:45Z"
      lastUpdateTime: "2023-04-12T11:07:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-12T11:07:44Z"
      lastUpdateTime: "2024-08-20T08:33:33Z"
      message: ReplicaSet "coredns-576bfc4dc7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xU3WrzRhB9lTLXkmzHiTGCXpgkpaWJYxLSm2DKeDWyN17tLrtjNcLo3ctYcn5onPSD70r7M3P2zJwz2gN6/ReFqJ2FHND7OKhHkMBW2wJyuCJvXFORZUigIsYCGSHfA1rrGFk7G2XrVs+kOBJnQbtMIbOhTLuBFhBITt67fyyFdF1vIYftOL67qUfJL39qW/w6Kwpnv4WwWBHkYJxCk0Z2Adf0v5KiRyWZ292K0thEpgraBAyuyHxZ2gbjBnIYTcfl+EJNLspypcbDyflkOC7Px+XoYjospmoyxbMCV8W5gH4g6ZE3qQ+u1tJ8CtDdn+ATPSlhE6iL/11Lkc2NrjRDPkwgkiHFLkhQhaw2N68VoPenX20FnAMyrZvDA84YbdePvkCmDuzl0WKN2uDKEOSjNgFuvHC8/xAr51R5c8x75xbzA1z6QpWzjNpSiJA/ybaqUCz5dLp9kTGIT9NUOVvqNSQwIFaDbtd/sufoLCwTIFsfkHtRFndXf89nt9cPi9nlNSRQo9nRb8FVQqbUZIp7Kl/XC2QR/1hj9qZc27bLBHQl/sshoFUbCoPPOef1MBtmZ1PoExY7YxbOaNVADn+Uc8eLQLEbvu+8Uzuzq+jW7Sx3Hatk2fN834Y3rO4g7TKhXQpxH7QLmptLgzHOu7jOhal1BaUqaNYKjbSbQq0VzZSSl+Zf8Uv72BS7YEiAnaFw/IE87WFLUvRlD38Y+nhnTSND7CVSrA3XLzpyhDbZA5UlKYYc5u5BbajYGRn4DuZANThDmYxRsMQUZWbFVMGZ1Bu09FORK4x80OETyOVRnaOVpe236MVN/5W19257Wqa2bf8NAAD//xkIQoW4BQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2023-04-12T11:07:32Z"
    generation: 2
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "18109"
    uid: df978dd7-927d-406d-b3be-808e6ab54fa5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:v0.0.28
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-04-12T11:07:45Z"
      lastUpdateTime: "2023-04-12T11:07:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-12T11:07:44Z"
      lastUpdateTime: "2024-08-20T08:33:33Z"
      message: ReplicaSet "local-path-provisioner-6795b5f9d8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV4W8auRP9V36az7vJLoHQrsQHRPiV6tIUFXqnUxUh4x3Ah9f2eWZpuIj//TS7SUovpelV9wUt9vPzmzfjmXtQwfyKkYx3UIAKgc53OSSwNa6EAq4wWL+v0DEkUCGrUrGC4h6Uc54VG+9I/vrlH6iZkM+i8WdaMVs8M/7cCAkkJ/f9Z4cxXe+2UMD2go52dnnyv1+MKwfDsvTuRQqnKoRCJEajKSWMO4xpeSz/ZQIKSgvLtl5iSntirOCQgFVLtE2Y21eUqhCeXfQd9o2iDRSAeYadbg/zC+xeqn6np1+XZVl2V69x2bl4vcq7/X6/uyrlvm/GAu36CYkUUIvAiDsjuZwYYh/316YyDEWWAKFFzT4KqFKsN9cvB3UQYo6Kcb1vyL21xq0/hlIxtkR3H53aKWPV0iIU+SEB3gfR9+ErrKxjFezjuaNC+gFzT1pyFLj2jpVxGAmKT/eg4lo+IE01Rk5LEwfnXAVIIE0JdR0xDT7yIM86vaxZFUMtchoirjBGLFNVlhGJUomIBm8dY3TKvp0m47unz4knbrQdU9SEqfMlpsSKa2puagCt/DQieVvL2xnkPWp22FKqTdhgTKk2jDSYX88W49HVZCy/s+Hit7fzyWI4ni06vcvFm9G7xWwyvHjVTb7gPvwQ6h9seefVI67TuzzFdhJ1xDaaDEeTYSdbTN9f/55fZL1vkT0DwW0CplJryW5UTm8wnlcmRi8Z+DrdxS47659JtqzZoUOiafTLpqBWytg64nwTkTbellBcJLBhDm+QZT8olkd4Lgf/ggSajBQNQvwnvcGmvibz+XQmZWWcYaPsFVq1n6H2riQoLrMEAkbjy6elXJ5WrTUSHV2eJ8CmQl/zF+B33rWoacv2qYqnjcCmOp/OPaoN0bPX3kIB89EUDrcJRFSl+SlH5OT+5y157kjnXxgiD6GOGqltXX/WSNx861BDAXmWVc3YqXzcQwH97J1pm5K8YMP7kXeMd008ylr/eRrNzlhc45i0ss10gmKlLGFr0Xtn9x+85/8biw+9s+BYy27thnTjnex+tfaRMEoisuyQwM7busJ3vnYP+arkc/pgZdtfHpLFVZCuA4dbyU+IxjeCrSK6aRGtgLZR6GjYaGXFeIw7o3GotXDfnCgZ9hbj4/j9dA9bFINGDzTNyCSJVgZTEKR0fhjfGTH4kNwDrlaoJeE3fqY3WNZWelhL00iK3uKZdLTokJFklEl1Rm/TYJXD/5S5UsTtFH1OefvoexspVoH3V0YG2eFbbh8Oh78DAAD//+eqltvVCAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2023-04-12T11:07:33Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "28361"
    uid: 555f63fa-be45-4127-937b-7f49722b156b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
          image: rancher/mirrored-metrics-server:v0.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-04-12T11:07:45Z"
      lastUpdateTime: "2023-04-12T11:07:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-12T11:07:44Z"
      lastUpdateTime: "2024-08-20T08:34:01Z"
      message: ReplicaSet "metrics-server-557ff575fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2023-04-12T11:08:02Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-25.0.3_up25.0.0
    name: traefik
    namespace: kube-system
    resourceVersion: "15888"
    uid: 12579355-acd5-4eed-9e54-80017c0252bb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-kube-system
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-25.0.3_up25.0.0
      spec:
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entrypoints.metrics.address=:9100/tcp
          - --entrypoints.traefik.address=:9000/tcp
          - --entrypoints.web.address=:8000/tcp
          - --entrypoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetesingress
          - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
          - --entrypoints.websecure.http.tls=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/mirrored-library-traefik:2.10.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 9000
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-20T07:55:32Z"
      lastUpdateTime: "2024-08-20T07:55:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-12T11:08:02Z"
      lastUpdateTime: "2024-08-20T08:33:48Z"
      message: ReplicaSet "traefik-5fb479b77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"fastapi","namespace":"kustomize"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"fastapi"}},"template":{"metadata":{"labels":{"app":"fastapi"}},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","value":"postgresql://admin:password@db:5432/storedb"}],"image":"surabhiharsha5/fastapi:latest","name":"fastapi","ports":[{"containerPort":5000}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"250m","memory":"256Mi"}}}]}}}}
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    name: fastapi
    namespace: kustomize
    resourceVersion: "39097"
    uid: 509a4c0d-52e8-4bcf-9cd4-6b486bf1e872
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: fastapi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fastapi
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: postgresql://admin:password@db:5432/storedb
          image: surabhiharsha5/fastapi:latest
          imagePullPolicy: Always
          name: fastapi
          ports:
          - containerPort: 5000
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2024-08-24T21:54:25Z"
      lastUpdateTime: "2024-08-24T21:54:29Z"
      message: ReplicaSet "fastapi-6d48b4cc8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-08-24T21:54:50Z"
      lastUpdateTime: "2024-08-24T21:54:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"pgadmin","namespace":"kustomize"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"pgadmin"}},"template":{"metadata":{"labels":{"app":"pgadmin"}},"spec":{"containers":[{"env":[{"name":"PGADMIN_DEFAULT_EMAIL","value":"admin@admin.com"},{"name":"PGADMIN_DEFAULT_PASSWORD","value":"root"}],"image":"dpage/pgadmin4:latest","name":"pgadmin","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    name: pgadmin
    namespace: kustomize
    resourceVersion: "38974"
    uid: c91ea3f5-8a65-4834-964d-9e0381addf15
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pgadmin
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pgadmin
      spec:
        containers:
        - env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: admin@admin.com
          - name: PGADMIN_DEFAULT_PASSWORD
            value: root
          image: dpage/pgadmin4:latest
          imagePullPolicy: Always
          name: pgadmin
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-24T21:54:28Z"
      lastUpdateTime: "2024-08-24T21:54:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-24T21:54:25Z"
      lastUpdateTime: "2024-08-24T21:54:28Z"
      message: ReplicaSet "pgadmin-fbf74c6c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"postgres","namespace":"kustomize"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgres"}},"template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","valueFrom":{"secretKeyRef":{"key":"POSTGRES_USER","name":"postgres-secret"}}},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"POSTGRES_PASSWORD","name":"postgres-secret"}}},{"name":"POSTGRES_DB","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_DB","name":"postgres-config"}}}],"image":"postgres:12.0-alpine","name":"postgres","ports":[{"containerPort":5432}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data/","name":"postgres-storage"}]}],"volumes":[{"name":"postgres-storage","persistentVolumeClaim":{"claimName":"postgres-pvc"}}]}}}}
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    name: postgres
    namespace: kustomize
    resourceVersion: "39058"
    uid: 2fec42fd-b9f1-4a88-900e-9aacb9ba0368
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: postgres-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgres-secret
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgres-config
          image: postgres:12.0-alpine
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data/
            name: postgres-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-24T21:54:35Z"
      lastUpdateTime: "2024-08-24T21:54:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-24T21:54:25Z"
      lastUpdateTime: "2024-08-24T21:54:35Z"
      message: ReplicaSet "postgres-7c4db445f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:34:23Z"
    generation: 6
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: prod
    resourceVersion: "22532"
    uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-20T12:02:46Z"
      lastUpdateTime: "2024-08-20T12:02:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-20T11:34:23Z"
      lastUpdateTime: "2024-08-20T12:21:28Z"
      message: ReplicaSet "app-fastapi-85f6bc55bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T10:45:41Z"
    generation: 10
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
    name: app-fastapi
    namespace: staging
    resourceVersion: "22369"
    uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-20T11:59:25Z"
      lastUpdateTime: "2024-08-20T11:59:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-20T11:19:53Z"
      lastUpdateTime: "2024-08-20T12:15:32Z"
      message: ReplicaSet "app-fastapi-85f6bc55bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 10
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:52:28Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 578868585d
    name: app-fastapi-578868585d
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "21909"
    uid: 21ce51ed-b021-49e3-b9eb-c15bfb1f79b0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 578868585d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 578868585d
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:22:46Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 5d56f8546
    name: app-fastapi-5d56f8546
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "20458"
    uid: 020abc58-6b29-4da3-b8c5-e185bfed76fc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 5d56f8546
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 5d56f8546
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:19:51Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 5f575dbc67
    name: app-fastapi-5f575dbc67
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "20103"
    uid: 190b4d1c-286e-4d48-a9ce-7dc05e7184fe
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 5f575dbc67
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 5f575dbc67
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:27:14Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6446d8ddcc
    name: app-fastapi-6446d8ddcc
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "20753"
    uid: e19a7ca4-7986-4f07-af2c-2f4e11389a12
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6446d8ddcc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6446d8ddcc
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T10:45:40Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 68dff9f7d7
    name: app-fastapi-68dff9f7d7
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "19860"
    uid: f9e5051f-90f1-4a7e-af51-68f77501a821
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 68dff9f7d7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 68dff9f7d7
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.1.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:44:32Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6db94cbb69
    name: app-fastapi-6db94cbb69
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "21828"
    uid: 46ee63bc-3b34-4c7c-b36e-f6265ef50c3d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6db94cbb69
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6db94cbb69
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:59:20Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 7d6bb88c55
    name: app-fastapi-7d6bb88c55
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "22348"
    uid: 393427d4-f35d-436b-8704-7aec14df12c9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 7d6bb88c55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 7d6bb88c55
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.12.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:38:43Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 846d4c595f
    name: app-fastapi-846d4c595f
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "21455"
    uid: 7c0c4fd1-2024-47d6-a312-9fb434998d89
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 846d4c595f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 846d4c595f
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.9.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T12:15:26Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "22338"
    uid: 42563440-1253-4b9a-9642-360eda1f2c22
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 85f6bc55bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 85f6bc55bd
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: dev
    creationTimestamp: "2024-08-20T11:34:48Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: f64c7b7cb
    name: app-fastapi-f64c7b7cb
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 5cc77e4c-bbe2-4ef5-8ed9-1271b7816441
    resourceVersion: "21040"
    uid: 7ff305b7-4b3f-414a-beac-926af25627a4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: f64c7b7cb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: f64c7b7cb
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xVQW/bOBP9Kx/mLMVW0jaugO/QtbPboq3XqJNeCqOgqZHFNcXhkiMnRqD/vhjJduw2TdrFniyTb4ZvHucN70F58xlDNOQgB+V9HGwySGBtXAE5TNBb2tboGBKokVWhWEF+D8o5YsWGXJS/tPwLNUfks2DoTCtmi2eGBkaSQPLDfbp1GNLVZg05rC/i0c4mS/733rji/2+KgtyzKZyqEXLQFLBw8afg0SstMetmiWncRsYa2gSsWqLtilqPYqq830P6vPIZHDJGybY7dkwBJ9P5E8dWKlaQw1Lj+eji/PVolGWXLy7U8GL0Si1fZsPyvHx1ieXli/MXQ/3yUoh8V9ITpKNHLZQDbozc5VsTmcL2g6kNQz5MIKJFzRQEVCvW1YenymwlJQfFuNp2acla41Y3vlCMfYq7G6c2yli1tAh51ibAWy/MPp1gZR1rb/dxRy30pNDtUVGaHCvjMETIv9yDCiv5gFSTKyGBAbIe7FQayE2UxiIsEjC1WgmjoJyuMAxqE4LA0h14/5tnZ9nwTLq+i5g11s7IGr2FHN6VU+JZwNhbwJoNOoxxFmjZFVQqY5uA11XAWJEtIL9IoGL2fyDLvlcs9z6oUFmuIAFPgSEfDUdyKbrC7o7fXl/PRCrjDBtlJ2jVdo6aXBEhfzVMwGMwVByWMglutMYYj07OEmBTIzX8AHysj4RCL+VB2VnH6uXFAb1DBmLSZCGHm4kwfCYkZe1Pw67Hj4a9zo4Ca+RgdHwkcJFAQFWYfyW5RG4fFM9G2c8q/r3g57+gd8BITdDYtbYVB8a+9WsK0lLZ5fCjgQ74d4Ox39W+ka3hsO4G7Q7aI8UKqJtgeDsmx3jXlamspdtZMBtjcYVXUSvbzWPIS2UjJqCVV0tjDZueiioKsc306vrrb++mk6/zq0+f342vxClFIC97ylpYtL3ofzq7/UTEvxuLu0GTc2iwTWBDtqnxIzVu10e1fM52uh/ZEY66z5VmlfaR8HDCPuePcwx0E5nqo1Td//SZjAtpnsLFg5MnWKrGiokdFTg/moenI50i5GCNa+7kjnww1AlvVYzTnkCvRqptExlDqoNho5UFuaawMRrfaC3FTL81HpPFsH80v9zDGoXYeBffPXSxKyEB8oIUfnB1Z6RJRCMsS9QMOUxprissGiuV92mkqjSQxbPTesR5gWzqrXL4n2auldT/eMqFVOvJ0mo793I1Y3Lyoph9y3TTf/7Lr1Kt7uZrvO3NtzvgfcfylFtFkbt+SeC2QnfjomITS9M/VzChKfGhUGHb99FhLJZm9VF5IWIY65Pr2r8wyX7SHFZEyB40pQLfkihxQD0syXHfDOX2B0bZjc4HNqdx6cEb5KWtlD149CmztIu2bdt/AgAA//+BDg8J/AkAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:23Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 576bfc4dc7
    name: coredns-576bfc4dc7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cfcaeee9-3295-4c0b-8fda-2534353caf64
    resourceVersion: "18086"
    uid: 66df247e-0058-4862-8780-1232a13dd6db
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 576bfc4dc7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 576bfc4dc7
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/mirrored-coredns-coredns:1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xU3WrzRhB9lTLXkmzHiTGCXpgkpaWJYxLSm2DKeDWyN17tLrtjNcLo3ctYcn5onPSD70r7M3P2zJwz2gN6/ReFqJ2FHND7OKhHkMBW2wJyuCJvXFORZUigIsYCGSHfA1rrGFk7G2XrVs+kOBJnQbtMIbOhTLuBFhBITt67fyyFdF1vIYftOL67qUfJL39qW/w6Kwpnv4WwWBHkYJxCk0Z2Adf0v5KiRyWZ292K0thEpgraBAyuyHxZ2gbjBnIYTcfl+EJNLspypcbDyflkOC7Px+XoYjospmoyxbMCV8W5gH4g6ZE3qQ+u1tJ8CtDdn+ATPSlhE6iL/11Lkc2NrjRDPkwgkiHFLkhQhaw2N68VoPenX20FnAMyrZvDA84YbdePvkCmDuzl0WKN2uDKEOSjNgFuvHC8/xAr51R5c8x75xbzA1z6QpWzjNpSiJA/ybaqUCz5dLp9kTGIT9NUOVvqNSQwIFaDbtd/sufoLCwTIFsfkHtRFndXf89nt9cPi9nlNSRQo9nRb8FVQqbUZIp7Kl/XC2QR/1hj9qZc27bLBHQl/sshoFUbCoPPOef1MBtmZ1PoExY7YxbOaNVADn+Uc8eLQLEbvu+8Uzuzq+jW7Sx3Hatk2fN834Y3rO4g7TKhXQpxH7QLmptLgzHOu7jOhal1BaUqaNYKjbSbQq0VzZSSl+Zf8Uv72BS7YEiAnaFw/IE87WFLUvRlD38Y+nhnTSND7CVSrA3XLzpyhDbZA5UlKYYc5u5BbajYGRn4DuZANThDmYxRsMQUZWbFVMGZ1Bu09FORK4x80OETyOVRnaOVpe236MVN/5W19257Wqa2bf8NAAD//xkIQoW4BQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:23Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 6795b5f9d8
    name: local-path-provisioner-6795b5f9d8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: df978dd7-927d-406d-b3be-808e6ab54fa5
    resourceVersion: "18108"
    uid: 826fd757-6257-4c69-8bd1-9bd35293d312
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 6795b5f9d8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 6795b5f9d8
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:v0.0.28
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV4W8auRP9V36az7vJLoHQrsQHRPiV6tIUFXqnUxUh4x3Ah9f2eWZpuIj//TS7SUovpelV9wUt9vPzmzfjmXtQwfyKkYx3UIAKgc53OSSwNa6EAq4wWL+v0DEkUCGrUrGC4h6Uc54VG+9I/vrlH6iZkM+i8WdaMVs8M/7cCAkkJ/f9Z4cxXe+2UMD2go52dnnyv1+MKwfDsvTuRQqnKoRCJEajKSWMO4xpeSz/ZQIKSgvLtl5iSntirOCQgFVLtE2Y21eUqhCeXfQd9o2iDRSAeYadbg/zC+xeqn6np1+XZVl2V69x2bl4vcq7/X6/uyrlvm/GAu36CYkUUIvAiDsjuZwYYh/316YyDEWWAKFFzT4KqFKsN9cvB3UQYo6Kcb1vyL21xq0/hlIxtkR3H53aKWPV0iIU+SEB3gfR9+ErrKxjFezjuaNC+gFzT1pyFLj2jpVxGAmKT/eg4lo+IE01Rk5LEwfnXAVIIE0JdR0xDT7yIM86vaxZFUMtchoirjBGLFNVlhGJUomIBm8dY3TKvp0m47unz4knbrQdU9SEqfMlpsSKa2puagCt/DQieVvL2xnkPWp22FKqTdhgTKk2jDSYX88W49HVZCy/s+Hit7fzyWI4ni06vcvFm9G7xWwyvHjVTb7gPvwQ6h9seefVI67TuzzFdhJ1xDaaDEeTYSdbTN9f/55fZL1vkT0DwW0CplJryW5UTm8wnlcmRi8Z+DrdxS47659JtqzZoUOiafTLpqBWytg64nwTkTbellBcJLBhDm+QZT8olkd4Lgf/ggSajBQNQvwnvcGmvibz+XQmZWWcYaPsFVq1n6H2riQoLrMEAkbjy6elXJ5WrTUSHV2eJ8CmQl/zF+B33rWoacv2qYqnjcCmOp/OPaoN0bPX3kIB89EUDrcJRFSl+SlH5OT+5y157kjnXxgiD6GOGqltXX/WSNx861BDAXmWVc3YqXzcQwH97J1pm5K8YMP7kXeMd008ylr/eRrNzlhc45i0ss10gmKlLGFr0Xtn9x+85/8biw+9s+BYy27thnTjnex+tfaRMEoisuyQwM7busJ3vnYP+arkc/pgZdtfHpLFVZCuA4dbyU+IxjeCrSK6aRGtgLZR6GjYaGXFeIw7o3GotXDfnCgZ9hbj4/j9dA9bFINGDzTNyCSJVgZTEKR0fhjfGTH4kNwDrlaoJeE3fqY3WNZWelhL00iK3uKZdLTokJFklEl1Rm/TYJXD/5S5UsTtFH1OefvoexspVoH3V0YG2eFbbh8Oh78DAAD//+eqltvVCAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:23Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 557ff575fb
    name: metrics-server-557ff575fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 555f63fa-be45-4127-937b-7f49722b156b
    resourceVersion: "28359"
    uid: db735062-807c-4897-bce1-d4c50e3c954f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 557ff575fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 557ff575fb
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
          image: rancher/mirrored-metrics-server:v0.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2023-04-12T11:08:02Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-20.3.1_up20.3.0
      pod-template-hash: 56b8c5fb5c
    name: traefik-56b8c5fb5c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 12579355-acd5-4eed-9e54-80017c0252bb
    resourceVersion: "15886"
    uid: ae7cd53e-a880-4aaf-bcc4-9b56590cc198
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
        pod-template-hash: 56b8c5fb5c
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-kube-system
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-20.3.1_up20.3.0
          pod-template-hash: 56b8c5fb5c
      spec:
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entrypoints.metrics.address=:9100/tcp
          - --entrypoints.traefik.address=:9000/tcp
          - --entrypoints.web.address=:8000/tcp
          - --entrypoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetesingress
          - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
          - --entrypoints.websecure.http.tls=true
          image: rancher/mirrored-library-traefik:2.9.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 9000
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:41Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-25.0.3_up25.0.0
      pod-template-hash: 5fb479b77
    name: traefik-5fb479b77
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 12579355-acd5-4eed-9e54-80017c0252bb
    resourceVersion: "15875"
    uid: 11b2a1a9-c5d5-41ab-9218-58b3cf81f340
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
        pod-template-hash: 5fb479b77
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-kube-system
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-25.0.3_up25.0.0
          pod-template-hash: 5fb479b77
      spec:
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entrypoints.metrics.address=:9100/tcp
          - --entrypoints.traefik.address=:9000/tcp
          - --entrypoints.web.address=:8000/tcp
          - --entrypoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetesingress
          - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
          - --entrypoints.websecure.http.tls=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/mirrored-library-traefik:2.10.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 9000
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    labels:
      app: fastapi
      pod-template-hash: 6d48b4cc8f
    name: fastapi-6d48b4cc8f
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fastapi
      uid: 509a4c0d-52e8-4bcf-9cd4-6b486bf1e872
    resourceVersion: "39096"
    uid: a16f5186-5e14-4886-b678-80a771e4ce2f
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: fastapi
        pod-template-hash: 6d48b4cc8f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fastapi
          pod-template-hash: 6d48b4cc8f
      spec:
        containers:
        - env:
          - name: DATABASE_URL
            value: postgresql://admin:password@db:5432/storedb
          image: surabhiharsha5/fastapi:latest
          imagePullPolicy: Always
          name: fastapi
          ports:
          - containerPort: 5000
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    labels:
      app: pgadmin
      pod-template-hash: fbf74c6c5
    name: pgadmin-fbf74c6c5
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pgadmin
      uid: c91ea3f5-8a65-4834-964d-9e0381addf15
    resourceVersion: "38972"
    uid: 60a4a4f5-9e84-4056-b889-8fe28c2f8520
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: pgadmin
        pod-template-hash: fbf74c6c5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pgadmin
          pod-template-hash: fbf74c6c5
      spec:
        containers:
        - env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: admin@admin.com
          - name: PGADMIN_DEFAULT_PASSWORD
            value: root
          image: dpage/pgadmin4:latest
          imagePullPolicy: Always
          name: pgadmin
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-24T21:54:25Z"
    generation: 1
    labels:
      app: postgres
      pod-template-hash: 7c4db445f
    name: postgres-7c4db445f
    namespace: kustomize
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 2fec42fd-b9f1-4a88-900e-9aacb9ba0368
    resourceVersion: "39056"
    uid: 41f58fdb-8e31-4991-b7b2-28d804c0a8c5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 7c4db445f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 7c4db445f
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: postgres-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgres-secret
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgres-config
          image: postgres:12.0-alpine
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data/
            name: postgres-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:53:18Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 578868585d
    name: app-fastapi-578868585d
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "22047"
    uid: 74771ec2-c4a1-4e16-ac97-47d489bc984e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 578868585d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 578868585d
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:34:23Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6446d8ddcc
    name: app-fastapi-6446d8ddcc
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "21202"
    uid: fac123e8-450f-4959-ab06-c0aad7dc93d4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6446d8ddcc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6446d8ddcc
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:45:45Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6db94cbb69
    name: app-fastapi-6db94cbb69
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "22016"
    uid: 9191cac6-3d91-4c43-aa45-b19a74e42017
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6db94cbb69
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6db94cbb69
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T12:02:44Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 7d6bb88c55
    name: app-fastapi-7d6bb88c55
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "22531"
    uid: 148810cc-8944-43db-99b1-f53bb1f7ae16
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 7d6bb88c55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 7d6bb88c55
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.12.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T12:21:25Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "22519"
    uid: afd64121-d197-4c3f-bf37-be5203dcf967
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 85f6bc55bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 85f6bc55bd
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: prod
    creationTimestamp: "2024-08-20T11:36:47Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: f64c7b7cb
    name: app-fastapi-f64c7b7cb
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 296a8269-56e9-4ed4-8d85-8d3fe143c7af
    resourceVersion: "21596"
    uid: 9bc1155f-d0de-4112-bb85-b7af19ab0b0c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: f64c7b7cb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: f64c7b7cb
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:52:30Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 578868585d
    name: app-fastapi-578868585d
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "21919"
    uid: 55eaa2c7-51ec-4e15-983e-ef022827559d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 578868585d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 578868585d
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:22:48Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 5d56f8546
    name: app-fastapi-5d56f8546
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "20488"
    uid: 051c49dc-4ad7-4a5e-b494-c17d9b32ee84
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 5d56f8546
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 5d56f8546
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:19:53Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 5f575dbc67
    name: app-fastapi-5f575dbc67
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "20140"
    uid: 7a20946d-b625-422f-8c8f-f460c740da49
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 5f575dbc67
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 5f575dbc67
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:27:16Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6446d8ddcc
    name: app-fastapi-6446d8ddcc
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "20800"
    uid: fd0da8e9-5cfa-4ab4-8943-1853cb4db263
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6446d8ddcc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6446d8ddcc
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T10:45:41Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 68dff9f7d7
    name: app-fastapi-68dff9f7d7
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "19900"
    uid: 3ceb41ca-c02d-468d-8f0b-cbd6b0a8ac10
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 68dff9f7d7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 68dff9f7d7
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.1.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:44:34Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 6db94cbb69
    name: app-fastapi-6db94cbb69
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "21861"
    uid: f7949300-d0a6-4a7f-b948-c87ee5b7a88a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 6db94cbb69
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 6db94cbb69
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:59:22Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 7d6bb88c55
    name: app-fastapi-7d6bb88c55
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "22368"
    uid: 771a9e96-beba-43a1-a3b0-88ab9c04cb0f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 7d6bb88c55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 7d6bb88c55
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.12.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:38:44Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 846d4c595f
    name: app-fastapi-846d4c595f
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "21495"
    uid: 848914b7-6d31-4fb9-a074-51681a2a4a0d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 846d4c595f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 846d4c595f
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.9.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T12:15:28Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: 85f6bc55bd
    name: app-fastapi-85f6bc55bd
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "22358"
    uid: 6fae3ba3-8fc5-4039-a72e-4935c5cb213e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: 85f6bc55bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: 85f6bc55bd
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: app
      meta.helm.sh/release-namespace: staging
    creationTimestamp: "2024-08-20T11:34:50Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: app
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: fastapi
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: fastapi-0.1.0
      pod-template-hash: f64c7b7cb
    name: app-fastapi-f64c7b7cb
    namespace: staging
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: app-fastapi
      uid: 9e63ddd4-eb21-4f35-b4fa-9eb97dc3f41d
    resourceVersion: "21087"
    uid: 2e3dd490-bb57-4d25-8d04-04391c030773
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: app
        app.kubernetes.io/name: fastapi
        pod-template-hash: f64c7b7cb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: app
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: fastapi
          app.kubernetes.io/version: 1.16.0
          helm.sh/chart: fastapi-0.1.0
          pod-template-hash: f64c7b7cb
      spec:
        containers:
        - image: surabhiharsha5/datascientestapi:v.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fastapi
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: app-fastapi
        serviceAccountName: app-fastapi
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"autoscaling/v2","kind":"HorizontalPodAutoscaler","metadata":{"annotations":{},"name":"fastapi-hpa","namespace":"kustomize"},"spec":{"maxReplicas":6,"metrics":[{"resource":{"name":"cpu","target":{"averageUtilization":70,"type":"Utilization"}},"type":"Resource"}],"minReplicas":3,"scaleTargetRef":{"apiVersion":"apps/v1","kind":"Deployment","name":"fastapi-hpa"}}}
    creationTimestamp: "2024-08-24T22:00:48Z"
    name: fastapi-hpa
    namespace: kustomize
    resourceVersion: "39212"
    uid: 85250f5b-ffe2-446c-9afc-3a102b3d91a9
  spec:
    maxReplicas: 6
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
    minReplicas: 3
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: fastapi-hpa
  status:
    conditions:
    - lastTransitionTime: "2024-08-24T22:01:03Z"
      message: 'the HPA controller was unable to get the target''s current scale:
        deployments/scale.apps "fastapi-hpa" not found'
      reason: FailedGetScale
      status: "False"
      type: AbleToScale
    currentMetrics: null
    desiredReplicas: 0
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xWUY/auhL+K1cj9ekmIYSwLJH6kIXsXW5ZQLCtztHRChkzAR8cO7IdWrTivx/ZSbvZsm230nmzzcyXmfm+meEJSMk+odJMCkhgQwzdd45d8ODAxBYS+L/cgAcFGrIlhkDyBEQIaYhhUmh7lZu/kRqNJlBMBpQYwzFgssOs9x554VMpjJKco/LpnijjK9wxbZTDAO+HCPKzQOXvjocGqPXTsev95wMT2/d3yIuRBf0ljiAFQgJGEczZ4U3muiTU+hyqDfr6pA0WcPaAKnShP7ACtSFFCYmoOPeAkw1yVxQbrstVB99F7l7fFMee6D0kQMN8OEAyIFEfe1ukg+6wP6AD0oviLuld5z3s5wT7uY2sydFVnQltCOf+84d+lJIHLuUl5qhQUNSQ/PWdLi7KDx5suKSHufUcI0fHZZITrtGDZ8a/PTVyavN1wUjlNNONtiEOu7GPUf/aj2O88jfD+MqnJBx0yTCOcEvg/Hj2QJdIbbU3hB5knk9ZwQwk3TAMPTBYlJwYtL//RL0/IUqKnO3uahJWd2nUv3p/HQ/CQa87HI1v0mgY3Ua3vVHWC8PrKBuH8c1VN729jm7iLM66V8P0Oh6O4/RmNOj1/3XZnFvp22oTJlA1xKmdPUAjAPDA9zUaXxvFxA482HG5ITyo2R9jTipulnVLnt7Dowcojg6pIWiW3mfgwZHwqs3X2ftm8SlbribzWftpmS3m7ftdNr1fj5eTT9myhaWRKjRtu9FdunxY20+uFumo/d2XXfjSoWW2N6bUSafz7unDx5tsOcsestU6XUzO7zraEk/rWupOk4cf9YMw6P23Kt0hvAj6leQe0uX/st+KMv34cLdepKvVerTMxtnsYZJOVy031yVth9l8vVjO//izZRPoI/UCyittUAVcUsK9bhjEkQ27071yl15zaWPdppPpx2W2Xsynk1EbUeFXkZwfPWAF2blXIugeVefAWVmi8q0Uk2MYXAexv6kY30ZhFIf9qAeNz6LifCE5oydIYJLPpFko1ChaTW4xwAOFWlbKjZgnq2CklWLmNJLC4Bfj+pNz+Xmh2JFx3GGmKeHk5WwhJdkwzgxzKLBVsrRyT6dTsENBIdnOBT8tpTS3jGPDRWJUhWcPjpJXBd7LSpi6XQp7XBBj27yzlwW+yLsTNJE3ebR/cyX+lTsldI+X/vXzmwDcHHoFoX6/gDBF2ZqtRXlp8T2iU4N+xe7lnLZjxnJ6frRiEXKLK+RIjVSWBqt7JdCgdjtUQwKcieoLOEq0Icp8k8hc3BLGK2Xr8ooEVCVSPZPCMljz5syoLMqFkjnjbqibU+nmTCUMK7AZY/VcRHVkFFNKbTaz1k58XjW1DGoFYFGa05ipelVsWVVAAvdYSHVqLdUL5n/P7Znw3/R7pvltjl8pf0mu93XUJk/NqalL/Y+stvJb28WtlZzt7klpfUTbulHCs/lrGnFMGGIq1+vnfwIAAP//ZkfXOGkKAAA
      objectset.rio.cattle.io/id: helm-controller-chart-registration
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:14Z"
    generation: 1
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c0f97ea7a25e3dec71957c7a3241a38f3e5fae5f
    name: helm-install-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: helm.cattle.io/v1
      blockOwnerDeletion: false
      controller: false
      kind: HelmChart
      name: traefik
      uid: 12d0e914-e258-44e6-b946-ca071a942eda
    resourceVersion: "15859"
    uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
  spec:
    backoffLimit: 1000
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
    suspend: false
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=84707319CDBA292F2F3CE30082ED04B61AF82B4E4E169A849D4ABC7356CAD361
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
          batch.kubernetes.io/job-name: helm-install-traefik
          controller-uid: 9cf855f3-c16b-44e1-af6d-6a79458c194e
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          - --set-string
          - global.systemDefaultRegistry=
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-25.0.3+up25.0.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: AUTH_PASS_CREDENTIALS
            value: "false"
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          - name: FAILURE_POLICY
            value: reinstall
          image: rancher/klipper-helm:v0.8.4-build20240523
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/klipper-helm/.helm
            name: klipper-helm
          - mountPath: /home/klipper-helm/.cache
            name: klipper-cache
          - mountPath: /home/klipper-helm/.config
            name: klipper-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: klipper-helm
        - emptyDir:
            medium: Memory
          name: klipper-cache
        - emptyDir:
            medium: Memory
          name: klipper-config
        - emptyDir:
            medium: Memory
          name: tmp
        - name: values
          secret:
            defaultMode: 420
            secretName: chart-values-traefik
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2024-08-20T08:33:44Z"
    conditions:
    - lastProbeTime: "2024-08-20T08:33:44Z"
      lastTransitionTime: "2024-08-20T08:33:44Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2024-08-20T08:33:23Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/7RWUY/aOBD+KydLfbokJCGwm0h9yLLhlisLCLbVnU4rZJwJ+HDsyHZo0Yr/frKTtmGXtrsP94bt+SYz830zwxPCFf0EUlHBUYI2WJNd7xAgB+0pz1GC/hQb5KASNM6xxih5QphzobGmgitzFJt/gWgF2pNUeARrzcCjokcNegesdIngWgrGQLpkh6V2JWyp0tL6QM4PPYjPHKS7PexbR52nQ+D89oHy/P0dsHJknP7SD8cloARpiaGge5fI/FUQVWFicPt6A646Kg0lOjmISLDhP9ASlMZlhRJeM+YghjfAbGFMyDZf5T2L3t6+OpYdVjuUoOi6KPr5gPSD4GrTvwoLkhM88OOreFDERXjlh7jwB3FoomtztdWnXGnMmHv+sR+l5iCb+hIKkMAJKJT880wjL6hADtowQfZzg7wFBpbXpMBMgYO+s//tqpVWl7uL7NRWQxD616QYFm5EhoEbxcPC3eSDaxd8ggdB5McFGaLT48lBqgJiKr/BZC+KYkpLqlES+L7vIA1lxbAG8/4TNf+ENMELur1ryFjdpeFg+D7r3/ijKArj6/EoGAVRnI5vxtHoOo6H45s4jMKrNIuCLBpG8U3cj0ZpFA/iOLi5+l8kdOqUwFQdUw6yJVBuzQ/UigE9Ogj4wT61lZ+l9xly0AGz+jkRJ+eb1adsuZrMZ92rZbaYd8932fR+fbucfMqWHX8KiATdtRvdpcuHtfnsapGOut8+b7VzQMdsp3Wlkl7v3dOHjzfZcpY9ZKt1upic3vWUYZQ0RVK9Ti5uOPB8r/97XYWDF0FfSO4hXf6RvSnK9OPD3XqRrlbr0TK7zWYPk3S66sBsC3QBs/l6sZz/9XfHxlMH4niE1UqD9JggmDmB70Wh53t+LxjaQ789dH2N08n04zJbL+bTyajrUcJX5k+PDqIl3tpbzMkOZG/PaFWBdI3GkoPvXXuRu6kpy0M/jPxB2EctZlEzthCMkiNK0KSYCb2QoIB3Otj4QA6SoEQt7fx4MrIEUkuqjyPBNXzRtvEYE58Xkh4ogy1kimCGzwcHrvCGMqqp9YJyKSqj4XQ6RabbJeB8ztlxKYQeUwYtF4mWNZwcdBCsLuFe1Fw3PVCanwusTf/2dqKEs7x7Xht5m0f3zZb4V3CCyQ5e4pvrVzmwA+aCh+b+hQtdVp3BWVYvLZ57tGpQF+zOh7CZHYbT06MRCxc5rIAB0UIaGozuJQcNyi5KhRLEKK+/IEuJ0ljqbxKZ8zGmrJamLhckIGueqpnghsGGN2tGRFktpCgos9NaHys7Z2quaQm3UOCa6WbYgTxQAikhJptZZ+md75FGCo0KoKz08ZbKZg/ktC5Rgu6hFPLY2Zwv2H8b7Dvpb8R9p/p1wK+0nxPsfB23yVP7q61N8/ersXKfrQ67Mwq6vceVwfEuolXEOeSSXiwrGuva9v3pvwAAAP//L7tz9F4KAAA
      objectset.rio.cattle.io/id: helm-controller-chart-registration
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik-crd
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-20T08:33:14Z"
    generation: 1
    labels:
      helmcharts.helm.cattle.io/chart: traefik-crd
      objectset.rio.cattle.io/hash: 48ff3d5c3117b372fcdca509795f9f2702af0592
    name: helm-install-traefik-crd
    namespace: kube-system
    ownerReferences:
    - apiVersion: helm.cattle.io/v1
      blockOwnerDeletion: false
      controller: false
      kind: HelmChart
      name: traefik-crd
      uid: e208cf6f-4c61-496f-bd58-e0ca51409fc6
    resourceVersion: "15844"
    uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
  spec:
    backoffLimit: 1000
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
    suspend: false
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
          batch.kubernetes.io/job-name: helm-install-traefik-crd
          controller-uid: 7cadf616-26b7-4010-a262-e9dcdc2567f6
          helmcharts.helm.cattle.io/chart: traefik-crd
          job-name: helm-install-traefik-crd
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik-crd
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-crd-25.0.3+up25.0.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: AUTH_PASS_CREDENTIALS
            value: "false"
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          - name: FAILURE_POLICY
            value: reinstall
          image: rancher/klipper-helm:v0.8.4-build20240523
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/klipper-helm/.helm
            name: klipper-helm
          - mountPath: /home/klipper-helm/.cache
            name: klipper-cache
          - mountPath: /home/klipper-helm/.config
            name: klipper-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: helm-traefik-crd
        serviceAccountName: helm-traefik-crd
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: klipper-helm
        - emptyDir:
            medium: Memory
          name: klipper-cache
        - emptyDir:
            medium: Memory
          name: klipper-config
        - emptyDir:
            medium: Memory
          name: tmp
        - name: values
          secret:
            defaultMode: 420
            secretName: chart-values-traefik-crd
        - configMap:
            defaultMode: 420
            name: chart-content-traefik-crd
          name: content
  status:
    completionTime: "2024-08-20T08:33:42Z"
    conditions:
    - lastProbeTime: "2024-08-20T08:33:42Z"
      lastTransitionTime: "2024-08-20T08:33:42Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2024-08-20T08:33:23Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
